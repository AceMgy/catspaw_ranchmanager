# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-06 03:22
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Location', '0001_initial'),
        ('Owner', '0002_brand'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriesMedical',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('comments', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Event.Event')),
                ('attributes', models.CharField(max_length=100)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Event.CustomCategories')),
                ('locations', models.ManyToManyField(to='Location.AnimalLocation')),
                ('people', models.ManyToManyField(to='Owner.Owner')),
                ('ranch', models.ManyToManyField(to='Location.Ranch')),
            ],
            bases=('Event.event',),
        ),
        migrations.CreateModel(
            name='HealthEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Event.Event')),
                ('severity', models.IntegerField(blank=True, choices=[(1, 'negligible'), (2, 'significant'), (3, 'moderate'), (4, 'dangerous'), (5, 'severe')], null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
            ],
            bases=('Event.event',),
        ),
        migrations.CreateModel(
            name='MedicalEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Event.Event')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
            ],
            bases=('Event.event',),
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Event.Event')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('paid', models.BooleanField(default=False)),
                ('paid_date', models.DateTimeField(blank=True, null=True)),
                ('new_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_new_owner', to='Owner.Owner')),
                ('prev_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_prev_owner', to='Owner.Owner')),
            ],
            bases=('Event.event',),
        ),
        migrations.CreateModel(
            name='AI',
            fields=[
                ('medicalevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Event.MedicalEvent')),
            ],
            bases=('Event.medicalevent',),
        ),
        migrations.CreateModel(
            name='Birth',
            fields=[
                ('healthevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Event.HealthEvent')),
                ('calving_ease', models.IntegerField(blank=True, choices=[(1, 'no assistance'), (2, 'easily pulled'), (3, 'pulled'), (4, 'pulled with difficulty'), (5, 'cesarean')], null=True)),
                ('live', models.BooleanField(default=True)),
            ],
            bases=('Event.healthevent',),
        ),
        migrations.CreateModel(
            name='CustomMedical',
            fields=[
                ('medicalevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Event.MedicalEvent')),
                ('attributes', models.CharField(max_length=100)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Event.CategoriesMedical')),
                ('locations', models.ManyToManyField(to='Location.AnimalLocation')),
                ('people', models.ManyToManyField(to='Owner.Owner')),
                ('ranch', models.ManyToManyField(to='Location.Ranch')),
            ],
            bases=('Event.medicalevent',),
        ),
        migrations.CreateModel(
            name='Death',
            fields=[
                ('healthevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Event.HealthEvent')),
            ],
            bases=('Event.healthevent',),
        ),
        migrations.CreateModel(
            name='EmbryoCollection',
            fields=[
                ('medicalevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Event.MedicalEvent')),
                ('embryo_num', models.PositiveIntegerField()),
            ],
            bases=('Event.medicalevent',),
        ),
        migrations.CreateModel(
            name='PregCheck',
            fields=[
                ('medicalevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Event.MedicalEvent')),
                ('months_remaining', models.DecimalField(decimal_places=2, max_digits=3)),
                ('cow_open', models.BooleanField(default=False)),
            ],
            bases=('Event.medicalevent',),
        ),
        migrations.CreateModel(
            name='SemenCollection',
            fields=[
                ('medicalevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Event.MedicalEvent')),
            ],
            bases=('Event.medicalevent',),
        ),
        migrations.CreateModel(
            name='Ultrasound',
            fields=[
                ('medicalevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Event.MedicalEvent')),
                ('months_remaining', models.DecimalField(decimal_places=2, max_digits=3)),
                ('cow_open', models.BooleanField(default=False)),
                ('sex', models.IntegerField(blank=True, choices=[(1, 'male'), (2, 'female')], null=True)),
            ],
            bases=('Event.medicalevent',),
        ),
        migrations.AddField(
            model_name='medicalevent',
            name='caregivers',
            field=models.ManyToManyField(to='Owner.Owner'),
        ),
        migrations.AddField(
            model_name='healthevent',
            name='treatments',
            field=models.ManyToManyField(to='Event.MedicalEvent'),
        ),
    ]
